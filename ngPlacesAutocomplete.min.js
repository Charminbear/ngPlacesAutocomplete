"use strict";angular.module("ngPlacesAutocomplete",[]).directive("ngPlacesAutocomplete",function(){var e="[ngPlacesAutocomplete] - ",n={bounds:"setBounds",types:"setTypes",componentRestrictions:"setComponentRestrictions"},a={bounds:null,types:[],componentRestrictions:null,bindTo:null};return{restrict:"EA",scope:{ngModel:"=",paOnPlaceReady:"=",paOptions:"=?"},controller:["$scope",function(n){if(!angular.isFunction(n.paOnPlaceReady))throw new Error(e+"paOnPlaceReady needs to be a function!");if(!google.maps||!google.maps.places)throw new Error(e+"Google Places Service not found!");var a=new google.maps.places.AutocompleteService,o=angular.element("<div>")[0],t=new google.maps.places.PlacesService(o);this.manualSearch=function(){var o=angular.extend({input:n.ngModel},n.paOptions);a.getPlacePredictions(o,function(a){return a&&0!=a.length?void t.getDetails({placeId:a[0].place_id},function(a,o){o==google.maps.places.PlacesServiceStatus.OK||o==google.maps.places.PlacesServiceStatus.ZERO_RESULTS?n.paOnPlaceReady(null,a):n.paOnPlaceReady(new Error(e+'Places returned status: "'+o+'"')),n.$apply()}):n.onDetailsReady(null)})}}],link:function(e,o,t,l){function c(){s&&(e.paOptions=angular.extend(angular.copy(a),e.paOptions),angular.forEach(n,function(n,a){var o=e.paOptions[a]||void 0;s[n](o)}))}var s=new google.maps.places.Autocomplete(o[0],{});google.maps.event.addListener(s,"place_changed",function(){e.$apply(function(){var n=s.getPlace();n.address_components?e.paOnPlaceReady(null,n):l.manualSearch()})}),e.$watch("paOptions",function(){c()},!0)}}});